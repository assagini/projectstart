<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
	
	<!-- 
	1. 웹 자원과 관련되지 않은 모든 자원의 설정을 위해서 존재
	   (웹과 관련된 설정은 appServlet 폴더 내에 있는 servlet-context.xml 파일로 분리한다)
	2. 여기서 다양한 설정을 하기 위해서는 아래 보이는 탭 중에서 Namespaces탭을 사용해 체크를 해줘서 범위를 넓혀줘야 한다.
	3. 일단, aop, context, jdbc, mybatis-spring에 체크한다. 그러면 상단에 코드가 추가된다.
	
	-->
	
	<!-- MySQL에 연결하기 위해 DataSource 코드 작성  -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>      <!-- 좀 더 자세한 MyBatis로그를 보기 위해서 바꿈, 원래는 com.mysql.jdbc.Driver  -->
		<property name="url" value="jdbc:log4jdbc:mysql://127.0.0.1:3306/book_ex?useSSL=false"/>		<!--마찬가지 이유로 :log4jdbc 이거 넣었음  -->
		<property name="username" value="zerock"/>
		<property name="password" value="zerock"/>
	</bean>
	<!--//  -->
	
	<!-- MyBatis와 스프링 연결  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">			<!-- sqlSessionFactory는 Connection을 생성하고, 처리한다. -->
																							<!-- SqlSessionFactoryBean는 sqlSessionFactory를 생성해주는 특별한 객체이다. -->
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis-config.xml" />		<!--스프링이 동작할 때 같이 동작하도록 설정해주는 작업  -->
		<property value="classpath:mappers/**/*Mapper.xml" name="mapperLocations"/>		<!--mappers폴더내에서 파일이름이 Mapper.xml로 끝나면 자동으로 인식되도록 하는 설정  -->
	</bean>
	<!--//  -->
	
	<!-- SqlSessionTemplate이라는 클래스로 개발자들이 직접 연결을 맺고, 종료하는 작업을 줄인다. -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	<!--//  -->	
	
	<!--@Repository 애노테이션이 설정되더라도 스프링에서 해당 페키지를 스캔하지 못하면 제대로 스프링의 빈으로 등록이 안된다. 그래서 아래 코드를 넣는다.  -->
	<context:component-scan base-package="org.zerock.persistence"> </context:component-scan>
	<!--//  -->
	
	<!--service패키지를 자동으로 인식할 수 있도록 하는 코드  -->
	<context:component-scan base-package="org.zerock.service"></context:component-scan>
	<!--//  -->
	
</beans>
